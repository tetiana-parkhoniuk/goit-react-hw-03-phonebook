{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsListItem/ContactsListItem.module.css","components/ContactsList/ContactsList.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","className","styles","form","this","formLabel","htmlFor","type","id","formInput","onChange","submitBtn","Component","Filter","filterContainer","label","input","ContactsListItem","onDeleteContact","contactItem","deleteBtn","onClick","ContactsList","contacts","contactList","map","contact","App","filter","filterInputId","addContact","find","toLowerCase","alert","prevState","changeFilter","getFilteredContacts","normalizedFilter","includes","deleteContact","contactId","filteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce1ad8c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__8l6kJ\",\"deleteBtn\":\"ContactsListItem_deleteBtn__1sLou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from 'components/ContactForm/ContactForm.module.css';\n\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number:'',\n    }\n\n    nameInputId = uuidv4();\n    numberInputId = uuidv4();\n    \n    handleInputChange = event => {\n      const { name, value } = event.currentTarget;\n      this.setState({\n        [name]: value,\n      })\n    }\n\n    handleSubmit = event => {\n      event.preventDefault();\n        \n      this.props.onSubmit(this.state);\n\n      this.resetForm();\n    }\n    \n    resetForm = () => {\n      this.setState({\n        name: '',\n        number:'',\n      })\n    }\n\n    render() {\n        return (\n            <form\n                className={styles.form}\n                onSubmit={this.handleSubmit}\n            >\n          \n          <label className={styles.formLabel} htmlFor={ this.nameInputId}>\n            Name\n          </label>\n          <input\n              type=\"text\"\n              name=\"name\"\n              id={ this.nameInputId}\n              value={this.state.name}\n              className={styles.formInput}\n              onChange={ this.handleInputChange}\n          />\n          \n          <label className={styles.formLabel} htmlFor={ this.nameInputId}>\n            Number\n          </label>\n          <input\n              type=\"text\"\n              name=\"number\"\n              id={this.numberInputId}\n              value={this.state.number}\n              className={styles.formInput}\n              onChange={ this.handleInputChange}\n          />\n\n            <button\n                type=\"submit\"\n                className={styles.submitBtn}>Add contact\n            </button>\n        </form>\n        )\n    }\n}\n","import PropTypes from 'prop-types';\nimport styles from 'components/Filter/Filter.module.css'\n\nexport default function Filter({ id, value, onChange }) {\n    return (\n        <div className={styles.filterContainer}>\n            <label className={styles.label} htmlFor={id}>\n            Find contacts by name\n            </label>\n            <input\n                type=\"text\"\n                id={id}\n                value={value}\n                className={styles.input}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    id: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\n\n","import PropTypes from 'prop-types';\nimport styles from 'components/ContactsListItem/ContactsListItem.module.css';\n\nexport default function ContactsListItem({ id, name, number, onDeleteContact}) {\n    return (\n        <li className={styles.contactItem}>\n            {name}: {number}\n            <button\n                className={styles.deleteBtn}\n                onClick={()=> onDeleteContact(id)}>Delete\n            </button>\n        </li>\n    )\n}\n\nContactsListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n}\n\n\n","import PropTypes from 'prop-types';\nimport ContactsListItem from 'components/ContactsListItem/';\nimport styles from 'components/ContactsList/ContactsList.module.css';\n\nexport default function ContactsList({ contacts, onDeleteContact }) {\n    return (\n        <ul className={styles.contactList}>\n            {contacts.map(contact => (\n                <ContactsListItem\n                    key={contact.id}\n                    id={contact.id}\n                    name={contact.name}\n                    number={contact.number}\n                    onDeleteContact={onDeleteContact}\n                />\n            ))}\n        </ul>\n    )\n}\n\nContactsList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n}\n\n\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport styles from 'App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  filterInputId = uuidv4();\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n\n    if (this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts]\n    }));\n    }\n  };\n\n  changeFilter = event => {\n    this.setState({filter: event.currentTarget.value})\n  }\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className={styles.container}>\n\n        <h1>Phonebook</h1>\n\n        <ContactForm\n          onSubmit={this.addContact}\n        />\n        \n        <h2>Contacts</h2>\n\n        <Filter\n          id={this.filterInputId}\n          value={filter}\n          onChange={ this.changeFilter}\n        />\n\n        <ContactsList\n          contacts = {filteredContacts}\n          onDeleteContact = {this.deleteContact}\n        />\n        \n      </div>\n    )\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}